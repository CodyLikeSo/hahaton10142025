import itertools

SECRET_KEY = "sk-iXC2N_CPmS97ROX9ZXLDTw"

KEYWORDS_SET = {
    # 1. Продукты и услуги (Карты, Кредиты, Вклады)
    "more",
    "форсаж",
    "комплимент",
    "signature",
    "infinite",
    "plat/on",
    "портмоне 2.0",
    "отличник",
    "черепаха",
    "кстати",
    "на всё про всё",
    "дальше - меньше",
    "легко платить",
    "всё только начинается",
    "старт",
    "проще в онлайн",
    "автокредит без залога",
    "экспресс-кредит",
    "на роднае",
    "мои условия",
    "мои условия онлайн",
    "великий путь",
    "суперсемь",
    "подушка безопасности",
    "usd",
    "eur",
    "rub",
    "cny",

    # 2. Ключевые термины и аббревиатуры
    "втб (беларусь)",
    "зао банк втб (беларусь)",
    "мси",
    "межбанковская система идентификации",
    "vtb mbank",
    "vtb online",
    "дбо",
    "пдн",
    "показатель долговой нагрузки",
    "ерип",
    "аис «расчет»",
    "паспорт",
    "справка о доходах",
    "ип",
    "индивидуальный предприниматель",
    "самозанятый",
    "кредитный лимит",
    "ussd",
    "mir pay",
    "nfc",
    "белкарт",
    "платежная система «мир»",
    "пс «мир»",
    "byn",  # белорусские рубли [3-8]

    # 3. Операционные ключевые слова (действия и статусы)
    "регистрация",
    "онбординг",
    "оформление",
    "заявка",
    "восстановление",
    "закрыть вклад",
    "досрочно",  # часто используется с погашением/закрытием [9-13]
    "погашение",
    "лимиты",
    "активировать",
    "блокировка",
    "пополнить",
    "онлайн",
    "виртуальная карточка",
    "мгновенного выпуска",
}



def transpose_aliases(aliases: dict[str, list[str]]) -> dict[str,str]:
    vals = {}

    for k,v in aliases.items():
        for v in v:
            vals[v.strip().lower()] = k

    return vals

ALIASES = transpose_aliases({
    'more': ['море', 'mor'],
    'форсаж': ['forsage', 'forsag'],
    'республика беларусь': ['рб', 'республики беларусь', 'беларусь', 'белоруссия', 'белорусь', 'belarus', 'belorussia', 'belorussia'],
    'пароль': ['password', 'pass', 'креды'],
    'комплимент': ['compliment'],
    'signature': ['сигнатура', 'signa',],
    'infinite': ['инфинити', 'infinity', 'infin', 'инфинит', 'инфин'],
    'plat/on': ['платон', 'platon'],
    'портмоне': ['portmone', 'portmon', 'портмоне', 'портмоне 2.0', 'партмане', 'портмане', 'партмоне', 'portmon'],
    'отличник': ['otlichnik', 'отличника', 'отличнику', 'отличником', 'отличником', 'отличнике'],
    'черепаха': ['cherepaha', 'чирипаха', 'черипаха', 'чирепаха', 'черепах', 'черепахе', 'черепахой', 'черепаху', 'черепахи'],
    'на всё про всё': ['на все про все', 'на все провсе', 'на всё про все', 'на все про всё', 'навсепровсе'],
    'дальше - меньше': ['дальше меньше', 'дальше - меньше', 'дальше-меньше', 'дальшеменьше'],
})

def slice_windows(arr, n):
    if not arr or n <= 0 or n > len(arr):
        return []  # Handle edge cases for empty list, invalid window size

    windows = []
    for i in range(len(arr) - n + 1):
        windows.append(arr[i : i + n])
    return windows

def format_input(v: str) -> str:
    words = v.lower().strip().split(' ')
    return [ALIASES.get(x) or x for x in words]